# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Hub {
  id: ID!
  name: String!
  active: Boolean
  image: String
  latitude: Float
  longitude: Float
  usersConnection: [JoinUserHub!]
  microChats: [MicroChat!]
  owners: [User!]
  members: [User!]
}

type Image {
  id: ID!
  image: String
}

type InAppNotification {
  id: ID!
  header: String
  text: String!
  date: String!
  thumbnail: String
  actionLink: String
}

type Invite {
  id: ID!
  email: String!
}

type JoinUserHub {
  userId: ID!
  hubId: ID!
  user: User!
  hub: Hub!
  isOwner: Boolean!
  starred: Boolean!
  isPresent: Boolean!
}

type JoinUserInAppNotifications {
  userId: ID!
  inAppNotificationId: ID!
  user: User!
  inAppNotification: InAppNotification!
}

type JoinUserLocation {
  userId: ID!
  locationId: ID!
  user: User!
  location: Location!
}

type Location {
  id: ID!
  name: String!
  description: String!
  latitude: String!
  longitude: String!
}

type MicroChat {
  id: ID!
  hubId: Float!
  hub: ID!
  text: String!
}

type Mutation {
  changeName(lastName: String!, firstName: String!): User!
  changeEmail(newEmail: String!): User!
  changePassword(newPassword: String!, oldPassword: String!): Boolean!
  changeUserImage(newImage: String!): User!
  deleteAccount(password: String!, email: String!): Boolean!
  login(password: String!, email: String!): String
  register(data: RegisterInput!): String
  logout: Boolean!
  resetPassword(newPassword: String!, resetPin: String!, usersEmail: String!): Boolean!
  sendPasswordResetEmail(email: String!): Boolean!
  newInvite(email: String!): Boolean!
  createHub(longitude: Float!, latitude: Float!, image: String!, name: String!): Hub!
  inviteUserToHub(inviteesEmail: String!, hubId: Int!): Boolean!
  deleteHub(hubId: Int!): Boolean!
  renameHub(newName: String!, hubId: Int!): Hub!
  changeHubImage(newImage: String!, hubId: Int!): Hub!
  joinHub(id: Int!): Boolean!
  setHubStarred(hubId: Int!): Boolean!
  setHubNotStarred(hubId: Int!): Boolean!
  enteredHubGeofence(hubId: Int!): Boolean!
  exitedHubGeofence(hubId: Int!): Boolean!
  activateHub(hubId: Int!): Hub!
  deactivateHub(hubId: Int!): Hub!
  microChatToHub(microChatId: Int!, hubId: Int!): MicroChat!
  createMicroChat(microChatText: String!, hubId: Int!): MicroChat!
  deleteMicroChat(microChatId: Int!, hubId: Int!): Boolean!
  addUserFcmNotificationToken(token: String!): Boolean!
}

type Person {
  id: ID!
  name: String
}

type Query {
  me: User
  hub(id: Int!): JoinUserHub!
  usersHubs: [JoinUserHub!]!
  commonUsersHubs(otherUsersId: Int!): [JoinUserHub!]!
  usersPeople: [User!]!
  searchHubByName(search: String!): [Hub!]!
  ownedHubs: [Hub!]!
  memberOfHubs: [Hub!]!
  starredHubs: [Hub!]!
  getHubByQRImage(qrImageB64: String!): Hub!
  getInAppNotifications: [InAppNotification!]!
  sendPushNotification(userId: Float!): Boolean!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  image: String
  email: String!
  ownedHubs: [Hub!]!
  memberOfHubs: [Hub!]!
}
