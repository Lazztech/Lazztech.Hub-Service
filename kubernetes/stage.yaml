---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stage-lazztechhub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stage-lazztechhub
  template:
    metadata:
      labels:
        app: stage-lazztechhub
    spec:
      containers:
        - name: stage-lazztechhub
          image: registry.internal.lazz.tech/lazztechhub-service:latest
          env:
            - name: APP_NAME
              value: "Stage Lazztech Hub"
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: ACCESS_TOKEN_SECRET
            - name: FIREBASE_SERVER_KEY
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: FIREBASE_SERVER_KEY
            - name: PUSH_NOTIFICATION_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: PUSH_NOTIFICATION_ENDPOINT
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: GOOGLE_SECRET
            - name: EMAIL_FROM_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: EMAIL_FROM_ADDRESS
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: EMAIL_PASSWORD
            - name: DATABASE_TYPE
              value: postgres
            - name: DATABASE_HOST
              value: localhost
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USER
              value: postgres
            - name: DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: DATABASE_PASS
            - name: DATABASE_SCHEMA
              value: postgres
            - name: DATABASE_SSL
              value: "false"
            - name: FILE_STORAGE_TYPE
              value: object
            - name: OBJECT_STORAGE_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: OBJECT_STORAGE_ACCESS_KEY_ID
            - name: OBJECT_STORAGE_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: OBJECT_STORAGE_SECRET_ACCESS_KEY
            - name: OBJECT_STORAGE_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: OBJECT_STORAGE_SECRET_ACCESS_KEY
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "750m"
          ports:
          - containerPort: 8080
          imagePullPolicy: Always
        - name: stage-lazztechhub-db
          image: postgres
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stage-lazztechhub
                  key: DATABASE_PASS
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
          - containerPort: 5432
          volumeMounts:
          - mountPath: /var/lib/postgresql
            name: postgres-data
          imagePullPolicy: IfNotPresent
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: stage-lazztechhub-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stage-lazztechhub-pvc
  namespace: default
  labels:
    app: stage-lazztechhub
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: stage-lazztechhub-service
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: tcp
  selector:
    app: stage-lazztechhub
---
apiVersion: v1
kind: Service
metadata:
  name: stage-lazztechhub-db-service
  labels:
    app: stage-lazztechhub
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: tcp
  selector:
    app: stage-lazztechhub-db
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: stage-lazztechhub-lazztech-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - secretName: lazztech-acme-crt-secret
      hosts:
        - '*.lazz.tech'
  rules:
  - host: stage-lazztechhub.lazz.tech
    http:
      paths:
      - backend:
          serviceName: stage-lazztechhub-service
          servicePort: 80