---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-lazztechhub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-lazztechhub
  template:
    metadata:
      labels:
        app: dev-lazztechhub
    spec:
      containers:
        - name: dev-lazztechhub
          image: registry.internal.lazz.tech/lazztechhub-service:latest
          env:
            - name: APP_NAME
              value: "Dev Lazztech Hub"
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: dev-lazztechhub
                  key: ACCESS_TOKEN_SECRET
            - name: FIREBASE_SERVER_KEY
              valueFrom:
                secretKeyRef:
                  name: dev-lazztechhub
                  key: FIREBASE_SERVER_KEY
            - name: PUSH_NOTIFICATION_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: dev-lazztechhub
                  key: PUSH_NOTIFICATION_ENDPOINT
            - name: EMAIL_FROM_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: dev-lazztechhub
                  key: EMAIL_FROM_ADDRESS
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-lazztechhub
                  key: EMAIL_PASSWORD
          resources:
            requests:
              memory: "200Mi"
              cpu: "200m"
            limits:
              memory: "200Mi"
              cpu: "200m"
          ports:
          - containerPort: 8080
          volumeMounts:
          - mountPath: /app/data
            name: lazztech-data
          imagePullPolicy: Always
      volumes:
      - name: lazztech-data
        persistentVolumeClaim:
          claimName: dev-lazztechhub-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev-lazztechhub-pvc
  namespace: default
  labels:
    app: dev-lazztechhub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: dev-lazztechhub-service
  labels:
    app: dev-lazztechhub
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: dev-lazztechhub
---
apiVersion: v1
kind: Service
metadata:
  name: dev-lazztechhub-db-service
  labels:
    app: dev-lazztechhub
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: tcp
  selector:
    app: dev-lazztechhub-db
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: dev-lazztechhub
    release: prometheus
  name: dev-lazztechhub-servicemonitor
spec:
  endpoints:
  - path: /metrics
    port: http
  namespaceSelector:
    matchNames:
      - default
  selector:
    matchLabels:
      app: dev-lazztechhub
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dev-lazztechhub-lazztech-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - secretName: lazztech-acme-crt-secret
      hosts:
        - '*.lazz.tech'
  rules:
  - host: dev-lazztechhub.lazz.tech
    http:
      paths:
      - backend:
          serviceName: dev-lazztechhub-service
          servicePort: 80