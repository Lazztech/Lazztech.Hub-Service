{
  "name": "back-end",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js --config ./ormconfig.js",
    "migration:generate:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:create && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:create",
    "migration:generate:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:create",
    "migration:generate:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:create",
    "migration:up:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:up && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:create",
    "migration:up:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:up",
    "migration:up:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:up",
    "migration:down:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:down && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:down",
    "migration:down:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:down",
    "migration:down:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:down",
    "migration:create-blank:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:create -b && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:create -b",
    "migration:create-blank:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:create -b",
    "migration:create-blank:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:create -b",
    "migration:list:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:list && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:list",
    "migration:list:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:list",
    "migration:list:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:list",
    "migration:pending:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:pending && MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:pending",
    "migration:pending:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm migration:pending",
    "migration:pending:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm migration:pending",
    "migration:debug:all": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm debug && MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm debug",
    "migration:debug:sqlite": "MIKRO_ORM_CLI=$PWD/mikro-orm.sqlite.config.js mikro-orm debug",
    "migration:debug:postgres": "MIKRO_ORM_CLI=$PWD/mikro-orm.postgres.config.js mikro-orm debug"
  },
  "dependencies": {
    "@mikro-orm/cli": "^4.5.10",
    "@mikro-orm/core": "^4.5.10",
    "@mikro-orm/migrations": "^4.5.10",
    "@mikro-orm/nestjs": "^4.3.1",
    "@mikro-orm/postgresql": "^4.5.10",
    "@mikro-orm/sqlite": "^4.5.10",
    "@nestjs/common": "^8.0.5",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.5",
    "@nestjs/graphql": "^8.0.2",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/passport": "^8.0.0",
    "@nestjs/platform-express": "^8.0.5",
    "@nestjs/schedule": "^1.0.2",
    "@types/aws-sdk": "^2.7.0",
    "@types/imagemin": "^7.0.0",
    "@types/imagemin-mozjpeg": "^8.0.0",
    "@types/sharp": "^0.24.0",
    "@willsoto/nestjs-prometheus": "^4.0.0",
    "@zxing/library": "^0.15.2",
    "adorable-avatars": "^0.5.0",
    "apollo-server-express": "^2.25.2",
    "aws-sdk": "^2.805.0",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "crypto": "^1.0.1",
    "express": "^4.17.1",
    "graphql": "^15.5.1",
    "graphql-tools": "^4.0.6",
    "imagemin": "^7.0.1",
    "imagemin-mozjpeg": "^8.0.0",
    "is-jpg": "^2.0.0",
    "joi": "^17.4.0",
    "jpeg-js": "^0.3.6",
    "nestjs-s3": "^1.0.1",
    "node-datetime": "^2.1.2",
    "nodemailer": "^6.6.1",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.7.1",
    "prom-client": "^13.1.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.3.0",
    "sharp": "^0.25.3",
    "sqlite3": "^5.0.2",
    "ts-morph": "^11.0.3",
    "typedi": "^0.8.0"
  },
  "devDependencies": {
    "@apollo/gateway": "^0.35.1",
    "@nestjs/cli": "^8.1.0",
    "@nestjs/schematics": "^8.0.2",
    "@nestjs/testing": "^8.0.5",
    "@types/cron": "^1.7.3",
    "@types/express": "^4.17.8",
    "@types/jest": "^26.0.15",
    "@types/node": "^14.14.6",
    "@types/passport-jwt": "^3.0.3",
    "@types/passport-local": "^1.0.33",
    "@types/supertest": "^2.0.10",
    "@types/uuid": "^3.4.6",
    "@typescript-eslint/eslint-plugin": "^4.6.1",
    "@typescript-eslint/parser": "^4.6.1",
    "eslint": "^7.12.1",
    "eslint-config-prettier": "7.2.0",
    "eslint-plugin-prettier": "^3.1.4",
    "jest": "^26.6.3",
    "prettier": "^2.1.2",
    "supertest": "^6.0.0",
    "ts-jest": "^26.4.3",
    "ts-loader": "^8.0.8",
    "ts-node": "^9.0.0",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "mikro-orm": {
    "useTsNode": true,
    "tsConfigPath": "./tsconfig.mikro-orm.json",
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ]
  }
}
